# -*- coding: utf-8 -*-

import os, sys, time
import unittest
from HTMLTestRunner import HTMLTestRunner

# 动态添加D:\Python-web-selenium路径作为模块加载路径
sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))
from framework.dynamic_import_case import DynamicImportCase

# from framework.data_excel import DataExcel
# from poModel.testcase import test_ganji_home
# from poModel.testcase import test_ganji_register

# 使用discover，用例没有按照想要的排序执行
listaa = "D:\\autotest\\pythonSelenium\\testcase"


# 首先，动态导入testcase层目录及其所有子目录下的所有以test_*.py文件

# 其次，获取要执行的已经排序好的用例

# 最后，执行用例，发送报告
def gen_test_suite(caseList):
    testunit = unittest.TestSuite()
    for test_case in caseList:
        testunit.addTest(test_case)
    return testunit


if __name__ == "__main__":
    exe_strs = DynamicImportCase().find_pyfile_and_Import("./pythonSelenium")
    print(exe_strs)
    '''
    for i in exe_strs:
        print(i)
        exec(i, globals())'''

    # caseList = DataExcel("排序用例",r"D:\Python-web-selenium\poModel\exceldata\caseOrderExcel.xlsx").get_cell_data()
    caseList = unittest.defaultTestLoader.discover(listaa, pattern="test_*.py", top_level_dir=None)
    suite = gen_test_suite(caseList)
    print("zhuxh")
    print(suite)

    # 构造测试报告名称
    now = time.strftime("%Y-%m-%d %H_%M_%S", time.localtime())
    report_name = now + "_result.html"
    filename = os.path.join(r"D:\\autotest\\pythonSelenium\\report\\", report_name)
    filename1 = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(os.path.dirname(__file__)))))

    with open(filename, "wb") as f:
        runner = HTMLTestRunner(
            stream=f,
            title='Vteam Test Report',
            description='generated by HTMLTestRunner.',
            verbosity=2
        )
        runner.run(suite)



